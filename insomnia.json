{"_type":"export","__export_format":4,"__export_date":"2023-03-18T04:59:48.503Z","__export_source":"insomnia.desktop.app:v2023.1.0","resources":[{"_id":"req_b1225887b70f4f8886aa163a52c50c41","parentId":"fld_ed930a1874ec43a8afdc41cfdc109356","modified":1679115070594,"created":1679102737025,"url":"{{ _.baseurl }}/test","name":"Testing Connection of Local API","description":"Should return \"yo\" if the api is live.","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1679102737025,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_ed930a1874ec43a8afdc41cfdc109356","parentId":"wrk_927872c21f5e466cbd28dff516c0e350","modified":1679102734840,"created":1679102734840,"name":"Testing Playground","description":"","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1679102734840,"_type":"request_group"},{"_id":"wrk_927872c21f5e466cbd28dff516c0e350","parentId":null,"modified":1679102647362,"created":1679102647362,"name":"Grouper API","description":"","scope":"collection","_type":"workspace"},{"_id":"req_6679887285804ef7b6a039558986379e","parentId":"fld_5634ce008f4748b4baebff7558e99b0b","modified":1679114976109,"created":1679105079594,"url":"{{baseurl}}/course/","name":"Creating a new \"Course\"","description":"Creates a new Course document in the firebase of the following type: \n\n```typescript\ntype FirestoreCourseDoc = {\n    name: string;\n    completed?: string[] | undefined;\n    creator: string;\n    dueDate: Timestamp;\n    minGroupSize: number;\n    config: string | null;\n    questions?: Object[] | undefined;\n    count: number;\n}\n```\n\n# Request\n\n```json \n{\n\t\"name\": \"assignment name\", \n\t\"minGroupSize\": 5, \n\t\"dueDate\": \"(str) date object\", \n\t\"creator\":\"email\", \n\t\"config\": \"default\"\n}\n``` \n\n# Response \n`404` Firebase Error\n\n`409` Duplicate course name under the instructor \n\n`201` Course document added and updated instructor course list. ","method":"POST","body":{"mimeType":"application/json","text":"{\n\t\"name\": \"assignment name\", \n\t\"minGroupSize\": 5, \n\t\"dueDate\": \"(str) date object\", \n\t\"creator\":\"email\", \n\t\"config\": \"default\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1679105079595,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_5634ce008f4748b4baebff7558e99b0b","parentId":"wrk_927872c21f5e466cbd28dff516c0e350","modified":1679102912539,"created":1679102912539,"name":"/course ","description":"","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1679102912539,"_type":"request_group"},{"_id":"req_e9273f678af544f6bfa9359f1fee790c","parentId":"fld_5634ce008f4748b4baebff7558e99b0b","modified":1679114981048,"created":1679106189571,"url":"{{baseurl}}/course/:courseId","name":"Retrieve Course Document Data","description":"Returns a course data given the course name. \n\n# Request \n\n```\nreq.params.courseId\n```\n\n# Response \n\n`404` Does not exist. \n\n`200` Sends `{ ...courseData, survey: surveyData, group: groupData }`\n","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1679105079545,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_b2ee8cbc03fb48dbaebc15e25d459852","parentId":"fld_5634ce008f4748b4baebff7558e99b0b","modified":1679114967756,"created":1679106330445,"url":"{{baseurl}}/course/:courseId","name":"Deleting a Course","description":"Deletes a course from the database. \n\n# Request \n\n`req.params.courseId`\n\n# Response \n\n`404` Firebase Error\n\n`200` Success code only","method":"DELETE","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1679106330445,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_5e311be9ea4c4ab3aea2569f45dbf455","parentId":"fld_5634ce008f4748b4baebff7558e99b0b","modified":1679114961414,"created":1679106978080,"url":"{{baseurl}}/course/:courseId","name":"Update Course Settings","description":"Updates a \"course\". \n\n# Request\n`req.params.courseId` \n\nand ... \n\n```json \n{\n\t\"name\": \"assignment name\", \n\t\"minGroupSize\": 5, \n\t\"dueDate\": \"(str) date object\", \n\t\"creator\":\"email\", \n\t\"config\": \"default\"\n}\n```\n\n# Response \n`404` Firebase Error\n\n`200` Success code only","method":"PATCH","body":{"mimeType":"application/json","text":"{\n\t\"name\": \"assignment name\", \n\t\"minGroupSize\": 5, \n\t\"dueDate\": \"(str) date object\", \n\t\"config\": \"default\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1679106978080,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_eb88c3a74dd04cf09d81cd58da9412db","parentId":"fld_d58536064f92495d99957ddc1511c296","modified":1679103492036,"created":1679103267543,"url":"{{ _.baseurl }}/instructor/","name":"Create a New Instructor ","description":"This POST request should be adding a new user (instructor) to the database of users. \n\n# Request\n``` \n{ email , name } = req.body \n```\n\n# Response\n\n`201` Success. Creates User. \n`409` Error. Duplicate Email. \n`Other` Unknown. Frontend should handle. ","method":"POST","body":{"mimeType":"application/json","text":"{ \n\t\"email\": \"netid123@cornell.edu\", \n\t\"name\": \"Professor Name Here\" \n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1679103267543,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_d58536064f92495d99957ddc1511c296","parentId":"wrk_927872c21f5e466cbd28dff516c0e350","modified":1679102918411,"created":1679102918411,"name":"/instructor","description":"","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1679102918411,"_type":"request_group"},{"_id":"req_9d2642022ac94a5a910d34a056f9761e","parentId":"fld_d58536064f92495d99957ddc1511c296","modified":1679104069279,"created":1679103503824,"url":"{{ _.baseurl }}/instructor/wz282@cornell.edu/course","name":"Retrieve a Course Given a User Id","description":"Retrieves the info for a zing/group/course (?) for a given user (email). \n\n*May not be the way we want because no way to differentiate between different groups if a user has mulitple?* \n\n# Request\n\nIn the request parameters (route itself) => `userId`\n\n``` \nemail = req.params.userId\n```\n\n# Response\n\n`200` Success. Returns an `allCoursesData` object. \n```\n{ \n\tname, \n\tcreator,\n\tdueDateStr, \n\tminGroupSize, \n\tcourseId, \n\tcount \n}\n```\n\n`404` Error. `User _ does not exist`","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1679103267493,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"env_4b06db6dda96a789cbf32f53c160cbe7521f1173","parentId":"wrk_927872c21f5e466cbd28dff516c0e350","modified":1679102809049,"created":1679102647368,"name":"Base Environment","data":{"baseurl":"http://127.0.0.1:5001/zing-backend/us-central1/api"},"dataPropertyOrder":{"&":["baseurl"]},"color":null,"isPrivate":false,"metaSortKey":1679102647368,"_type":"environment"},{"_id":"jar_4b06db6dda96a789cbf32f53c160cbe7521f1173","parentId":"wrk_927872c21f5e466cbd28dff516c0e350","modified":1679102647369,"created":1679102647369,"name":"Default Jar","cookies":[],"_type":"cookie_jar"},{"_id":"spc_67b0c645f7e24da8a4ee69e5db149c42","parentId":"wrk_927872c21f5e466cbd28dff516c0e350","modified":1679102647363,"created":1679102647363,"fileName":"Grouper API","contents":"","contentType":"yaml","_type":"api_spec"},{"_id":"env_a67c86ac29734c34a48c026b5f4e334f","parentId":"env_4b06db6dda96a789cbf32f53c160cbe7521f1173","modified":1679102830920,"created":1679102811984,"name":"Local Environment","data":{"baseurl":"http://127.0.0.1:5001/zing-backend/us-central1/api"},"dataPropertyOrder":{"&":["baseurl"]},"color":"#ff0000","isPrivate":false,"metaSortKey":1679102811984,"_type":"environment"}]}